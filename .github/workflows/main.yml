# workflow의 이름
name: github-action-test

# 해당 workflow가 언제 실행될 것인지에 대한 트리거를 지정
on:
  # main branch에 대한 push 이벤트를 트리거로 지정
  push:
    branches: [ main ]
  # main branch에 대한 pull request 이벤트를 트리거로 지정
  pull_request:
    branches: [ main ]
  # 수동으로 해당 workflow 실행 지정
  workflow_dispatch:

# 현재 스크립트에서 사용할 환경변수를 정의하여 사용
env:
  S3_BUCKET_NAME: hotitembucket
  AWS_REGION: ap-northeast-2  
  CODEDEPLOY_NAME: github-actions
  CODEDEPLOY_GROUP: github-actions-group

# workflow는 한개 이상의 job을 가지며, 각 job은 여러 step에 따라 단계를 나눌 수 있습니다.
jobs:
  build:
    # 해당 workflow를 어떤 OS 환경에서 실행할 것인지 지정
    runs-on: ubuntu-latest

    # step은 작업의 일부로 실행될 일련의 작업을 나타냅니다.
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Verify Java Version
        run: java -version 

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash
      
      - name: Build with Gradle
        run: ./gradlew build
        shell: bash

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install frontend dependencies
        run: npm install
        working-directory: ./frontend

      - name: Build frontend
        run: npm run build
        working-directory: ./frontend

      - name: Make zip file
        run: |
          zip -r ./$GITHUB_SHA.zip .
          zip -r ./$GITHUB_SHA-frontend.zip ./frontend/build
        shell: bash

      # PR 이벤트에서는 배포를 막고, push 이벤트에서는 배포를 진행
      - name: Conditional Deploy
        if: github.event_name == 'push'
        run: |
          # Configure AWS credentials
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ env.AWS_REGION }}
          
          # Upload to S3
          aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip
          aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA-frontend.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA-frontend.zip

          # Code Deploy
          aws deploy create-deployment --application-name $CODEDEPLOY_NAME --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name $CODEDEPLOY_GROUP --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip
